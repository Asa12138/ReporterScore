% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichment.R
\name{KO_fisher}
\alias{KO_fisher}
\alias{KO_enrich}
\alias{KO_gsea}
\title{Perform fisher.test for enrichment}
\usage{
KO_fisher(
  ko_pvalue,
  padj_threshold = 0.05,
  p.adjust.method = "BH",
  type = c("pathway", "module")[1],
  KOlist_file = NULL,
  modulelist = NULL,
  verbose = TRUE
)

KO_enrich(
  ko_pvalue,
  padj_threshold = 0.05,
  p.adjust.method = "BH",
  type = c("pathway", "module")[1],
  KOlist_file = NULL,
  modulelist = NULL,
  verbose = TRUE
)

KO_gsea(
  ko_pvalue,
  add_mini = NULL,
  padj_threshold = 0.05,
  p.adjust.method = "BH",
  type = c("pathway", "module")[1],
  KOlist_file = NULL,
  modulelist = NULL,
  verbose = TRUE
)
}
\arguments{
\item{ko_pvalue}{ko_pvalue dataframe from \code{\link[ReporterScore]{ko.test}}.}

\item{padj_threshold}{p.adjust threshold to determine whether significant or not.}

\item{p.adjust.method}{The method used for p-value adjustment (default: "BH").}

\item{type}{"pathway" or "module" for default KOlist_file.}

\item{KOlist_file}{default NULL, use the internal file. Or you can upload your .rda file from \code{\link{make_KO_list}}.}

\item{modulelist}{NULL or customized modulelist dataframe, must contain "id","K_num","KOs","Description" columns. Take the `KOlist` as example, use \code{\link{custom_modulelist}}.}

\item{verbose}{logical}

\item{add_mini}{add_mini when calculate the logFC. e.g (10+0.1)/(0+0.1), default 0.05*min(avg_abundance)}
}
\value{
data.frame

A data frame containing the enrichment results.
}
\description{
This function performs KO enrichment analysis using the clusterProfiler package.

This function performs KO enrichment analysis using the clusterProfiler package.
}
\examples{
\donttest{
data("reporter_score_res")
ko_pvalue=reporter_score_res$ko_pvalue
fisher_res=KO_fisher(ko_pvalue)
plot(fisher_res)
}
\donttest{
data("reporter_score_res")
ko_pvalue=reporter_score_res$ko_pvalue
enrich_res=KO_enrich(ko_pvalue)
plot(enrich_res)
}
\donttest{
data("reporter_score_res")
ko_pvalue=reporter_score_res$ko_pvalue
gsea_res=KO_gsea(ko_pvalue)
enrichplot::gseaplot(gsea_res,geneSetID = gsea_res@result$ID[1])
}
}
